#include<stdio.h>

typedef struct process
{
	int pid,at,bt,ct,wt,tat,flag;	
}process;
void display(process p[],int n)
{
	int i;
	printf("pid\tat\tbt\tct\twt\ttat\n");
	for(i=1;i<=n;i++)
	{
		printf("%d\t%d\t%d\t%d\t%d\t%d\t",p[i].pid,p[i].at,p[i].bt,p[i].ct,p[i].tat,p[i].wt);
		printf("\n");
	}
}

int current_process(process p[],int n,int time)
{
	int i,c=0,pos,min=9999,a[100], min_at=p[pos].at ;

	for(i=1;i<=n;i++)//for checking which processes are arrived;if arrived then a[i]=1
	{
		if(p[i].at<=time)
			a[i]=1;
		else a[i]=0;
	}

	for(i=1;i<=n;i++)//for checking minimum burst time
	{
		if(a[i]==1)
		{
			if(p[i].bt<=min && p[i].flag!=1)
			{	min=p[i].bt;
				pos=i;
				c++;
			}			
		}
	}

	if(c>1)
	{
		for(i=1;i<=n;i++)
		{
			if(a[i]==1 && p[i].bt==p[pos].bt && p[i].at<min_at)
			{
				pos=i;
				min_at=p[i].at;
			}
		}
	}
	return pos;
}
int free_wait(process p[],int n,int time)
{
int i,c=0;
for(i=1;i<=n;i++)
{
  if(p[i].at>time && p[i].flag==0)
  c++;
  if(p[i].at<=time && p[i].flag==0)
  {
   c=0;
   break;
   }

}
void main()
{
	int i,n,time=0,pos,c=1,bt[100],sum_tat=0,sum_wt=0;
	float avg_tat,avg_wt;
	process p[100];

	printf("enter number of processes\n");
	scanf("%d",&n);

	printf("enter pid,at,bt\n");
	for(i=1;i<=n;i++)
	{	scanf("%d %d %d",&p[i].pid,&p[i].at,&p[i].bt);
		
		p[i].flag=0;
		bt[i]=p[i].bt;
	}
	while(c<=n)
	{
		if(free_wait(p,n,time))
		{
			time++;
			continue;
		}
		pos=current_process(p,n,time);
		p[pos].bt--;
		time++;
		if(p[pos].bt==0)
		{	p[pos].flag=1;
			p[pos].ct=time;
			c++;
		}		
	}
	for(i=1;i<=n;i++)
	{
		p[i].bt=bt[i];
		p[i].tat=p[i].ct-p[i].at;
		p[i].wt=p[i].tat-p[i].bt;
		sum_tat+=p[i].tat;
		sum_wt+=p[i].wt;		
	}
	avg_tat=(float)sum_tat/n;
	avg_wt=(float)sum_wt/n;	
	display(p,n);	
	printf("average tat is %d\naverage wt is %d\n",avg_tat,avg_wt);
}

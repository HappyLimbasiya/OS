#include<stdio.h>
int rq_start=0,rq_end=0;
typedef struct process
{
int pid,at,bt,ct,wt,tat,flag,in;
}process;
void display(process p[],int n)
{
int i;
printf("pid\tat\tbt\tct\ttat\twt\n");
for(i=1;i<=n;i++)
{
printf("%d\t%d\t%d\t%d\t%d\t%d\t",p[i].pid,p[i].at,p[i].bt,p[i].ct,p[i].wt,p[i].tat);
printf("\n");
}
}
void ready_queue_form(process p[],int rq[],int n,int time)
{
int i;
for(i=1;i<=n;i++)
{
if(p[i].at<=time && p[i].flag==0 && p[i].in==0)
{
rq[rq_end++]=i;
p[i].in=1;
}
}
}
void main()
{
int i,n,tq,count=1,rq[10000],time=0,pos=0,bt[100],sum_tat=0,sum_wt=0;
float avg_tat,avg_wt;
process p[100];
printf("enter number of process\n");
scanf("%d",&n);
printf("enter pid,at,bt\n");
for(i=1;i<=n;i++)
{
scanf("%d %d %d",&p[i].pid,&p[i].at,&p[i].bt);
p[i].flag=p[i].in=0;
bt[i]=p[i].bt;
}
printf("enter time quantum\n");
scanf("%d",&tq);
ready_queue_form(p,rq,n,time);
while(count<=n)
{

for(i=tq;i>0;i--)
{
p[rq[rq_start]].bt--;
time++;
if(p[rq[rq_start]].bt==0)
{
p[rq[rq_start]].flag=1;
p[rq[rq_start]].ct=time;
count++;
break;
}
}
ready_queue_form(p,rq,n,time);
if(p[rq[rq_start]].flag==0)
rq[rq_end++]=rq[rq_start];
rq_start++;
}
for(i=1;i<=n;i++)
{
p[i].bt=bt[i];
p[i].tat=p[i].ct-p[i].at;
p[i].wt=p[i].tat-p[i].bt;
sum_tat+=p[i].tat;
sum_wt+=p[i].wt;
}
avg_tat=(float)sum_tat/n;
avg_wt=(float)sum_wt/n;
display(p,n);
printf("average tat is %f\naverage wt is %f\n",avg_tat,avg_wt);
}
